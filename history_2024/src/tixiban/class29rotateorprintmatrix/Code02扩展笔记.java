package tixiban.class29rotateorprintmatrix;

public class Code02扩展笔记 {
    /**
     * 矩阵分层其实是一种宏观调度,不要局限于单个位置的变化,而是宏观分析矩阵有几个同类的部分组成.
     */

    /**
     * 给定一个矩阵,对其螺旋打印,例如给定
     * a b c d
     * e f g h
     * i j k l
     * m n o p
     * 输出
     * a b c d h l p o n m i e f g k j
     *
     * 思路:分层
     * 最外面一层,顺时针打印,然后第一层的最后一个跟第二层的第一个是接上的,直接右上角x++y++即可
     */

    /**
     * 给定一个正数n,输出n阶矩阵的螺旋,例如给定4,输出
     * a a a a
     *       a
     *   a   a
     *   a a a
     * 给定6,输出
     * a a a a a a
     *           a
     *   a a a   a
     *   a   a   a
     *   a       a
     *   a a a a a
     *
     * 思路:矩阵分层
     * 一圈有两层,最外边一圈,上右下外层打印,左边内层打印,且数量上去头去尾.
     * 然后左上角往右下角跳两层.
     */

    /**
     * 给定一个矩阵,要求之字形打印,例如给定
     * a b c d e
     * f g h i j
     * k l m n o
     * 输出
     * a f b c g k l h d e i m n j o
     * 思路:矩阵分层
     * 第一层:a
     * 第二层:b和f的连线
     * 第三层:c和k的连线
     * ...
     * 另(x1,y1)和(x2,y2)从a出发,(x1,y1)往下走,走到头再往右走,(x2,y2)往右走,走到头再往下走,两个点同步走,直到两点再次相遇.
     * 每走一步,打印二者连线的所有位置,且这次从上往下打,下次即从下往上打(设置一个bool类型的标识).
     * 怎么从下往上打?从(x1,y1)出发,每次x1-- y1++,直到遇到(x2,y2).
     */
}
