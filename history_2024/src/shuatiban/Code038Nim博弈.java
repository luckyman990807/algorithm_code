package shuatiban;

/**
 * Nim博弈，给定一个正数数组arr，先手和后手每次可以选择在一个位置拿走若干值，这个值要大于0，但是要小于该处的剩余，谁最先拿空arr谁赢.
 * 已知先手和后手都绝顶聪明,不管面对什么情况都能做出当前情况下的最优决策.
 *
 * 例如,数组[2,3],先手可以在0位置拿0到2之间,也可以在1位置拿0到3之间.先手拿完后手拿.直到谁最先把[0,0]留给对方,谁就赢了
 *
 * 思路:数学家Nim发明的解法:数组异或和!=0,则先手赢,数组异或和=0,则后手赢
 * 具体到每次怎么拿最优的话:每次都保证留给对方的数组异或和=0.如果当前面对的数组的异或和!=0,那么找出哪个数取走若干值之后等于其他数的异或和,就拿哪个数.
 * 如果自己当前面对的数组异或和就=0,那随便拿吧.如果对面绝顶聪明的话,自己就必输了.
 */
public class Code038Nim博弈 {
    public static void nim(int[] arr) {
        int xor = 0;
        for (int i = 0; i < arr.length; i++) {
            xor ^= arr[i];
        }
        if (xor != 0) {
            System.out.println("先手赢");
        } else {
            System.out.println("后手赢");
        }
    }
}
